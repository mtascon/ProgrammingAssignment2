q()
x <- 4
x
class(x)
y <- c(4, "a", TRUE)
class(y)
x <- c(1,3,5)
y <- c(3,2,10)
rbind(x,y)
x <- (0:40000)
print(x)
x <-list(2,"a","b",TRUE)
print(x)
x[[2]]
y<-"a"
print(y)
x <-1:4
y <-2
x+y
x<-c(3,5,1,10,12,6)
print(x)
x[x>6]<-0
print(x)
x<-c(3,5,1,10,12,6)
print(x)
x[x %in% 1:5]<-0
print(x)
read.table()
read.table(hw1_data)
read.table(hw1_data.csv)
pwd
help
getwd
getwd()
read.table(hw1_data)
read.table(hw1_data.csv)
MyData <- read.csv(file="hw1_data.csv", header=TRUE, sep=",")
header(MyData)
colnames(MyData)
MyData(1)
MyData[1]
c<-MyData[1]
print(c)
mean(c)
media(c)
median(c)
y<-MyData[1]
print(y)
y[y!=NA]
print(y)
y[y>NA]
bad<-is.na(y)
x[!bad]
y[!bad]
print(y]
print(y)
y[!bad]
median(y[!bad])
print(MyData)
MyData2<-MyData[Ozone>31 & Temp>90]
MyData2<-MyData["Ozone">31 & "Temp">90]
print(MyData2)
MyData2<-MyData["Ozone">31 && "Temp">90]
print(MyData2)
MyData2<-MyData["Ozone">"31" && "Temp">"90"]
print(MyData2)
print(MyData[1])
MyData2<-MyData[MyData[1]>31]
print(MyData2)
print(MyData)
MyData2<-(MyData[1]>31)
print(MyData2)
print(MyData1)
print(MyData)
selected<-MyData[1]>30
print(selected)
MyData3<-MyData(selected)
MyData3<-MyData[selected]
print(MyData3)
print(MyData)
MySubData1<-subset(MyData, Ozone>31 & Temp>90)
print(MySubData1)
mySolar <-MySubData1(Solar.R)
mySolar <-MySubData1["Solar.R"]
print(mySolar)
median(mySolar)
s<-mySolar[1]
print(s)
median(s)
s<-mySolar[2]
median(MySubData1["Solar.R"])
median(MySubData1[3])
median(MySubData1[2])
print(MyData)
MySubData2<-subset(MyData, Month==6)
print(MySubData2)
s<-MySubData[4]
s<-MySubData2[4]
print(s)
MySubData3<-subset(MyData, Month==5)
print(MySubData3)
q()
q()
source("cachematrix.R")
setwd("C:/Usuarios/manuel/Documentos/Github")
setwd("C:/Usuarios/manuel")
getwd()
setwd("C:/Users/manuel/Documents/Github")
source("cachematrix.R")
dir
ls
setwd("C:/Users/manuel/Documents/Github/ProgrammingAssignment2")
source("cachematrix.R")
myMatrix <- matrix(c(1,0,5,3,2,6,3,4,0), nrow=3, ncol=3, byrow=TRUE)
makeCacheMatrix(myMatrix)
makeCacheMatrix$set(myMatrix)
makeCacheMatrix$set(myMatrix)
makeCacheMatrix(myMatrix)
myMatrix <- matrix(c(1,0,5,3,2,6,3,4,0), nrow=3, ncol=3, byrow=TRUE)
makeCacheMatrix(myMatrix)
test=makeCacheMatrix(myMatrix)
test
test<-makeCacheMatrix(myMatrix)
test.get()
test$get()
test$inverse()
source("cachematrix.R")
test$inverse()
test.get()
test$get()
test.inverse(myMatrix)
test$inverse(myMatrix)
test$inverse()
test$getinverse()
source("cachematrix.R")
test$getinverse()
source("cachematrix.R")
test$getinverse()
source("cachematrix.R")
source("cachematrix.R")
test$getinverse()
solve?
kjdkdd
source("cachematrix.R")
test.set(myMatrix)
makeCacheMatrix(myMatrix)
test<-makeCacheMatrix(myMatrix)
test$get()
test$getinverse()
source("cachematrix.R")
test<-makeCacheMatrix(myMatrix)
test$getinverse()
myMatrix2<-test$getinverse()
source("cachematrix.R")
test<-makeCacheMatrix(myMatrix)
test$getinverse()
myMatrix2<-test$setinverse()
source("cachematrix.R")
myMatrix2<-test$setinverse()
test<-makeCacheMatrix(myMatrix)
myMatrix2<-test$setinverse()
test$setinverse()
test$get()
test$getinverse()
test$setinverse()
source("cachematrix.R")
test$get()
test$getinverse()
test$setinverse()
source("cachematrix.R")
test$get()
test$calculateinverse()
source("cachematrix.R")
test$calculateinverse()
test$get()
source("cachematrix.R")
test$get()
makeCacheMatrix(myMatrix)
test<-makeCacheMatrix(myMatrix)
test.get()
test$get()
test$getsolve()
test$settsolve()
test$setsolve()
test$setsolve(myMatrix)
test$getsolve(myMatrix)
test$getsolve()
test$getsolve(solve)
